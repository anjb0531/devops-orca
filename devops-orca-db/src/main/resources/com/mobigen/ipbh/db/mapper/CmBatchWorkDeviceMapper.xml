<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mobigen.ipbh.db.mapper.CmBatchWorkDeviceMapper">
  <resultMap id="BaseResultMap" type="com.mobigen.ipbh.db.model.CmBatchWorkDevice">
    <id column="work_id" jdbcType="VARCHAR" property="workId" />
    <id column="hostname" jdbcType="VARCHAR" property="hostname" />
    <result column="admin_ip" jdbcType="OTHER" property="adminIp" />
    <result column="commit_id" jdbcType="VARCHAR" property="commitId" />
    <result column="finished" jdbcType="BIT" property="finished" />
    <result column="expired" jdbcType="BIT" property="expired" />
    <result column="rollback_done" jdbcType="BIT" property="rollbackDone" />
    <result column="cfg_changed" jdbcType="BIT" property="cfgChanged" />
    <result column="log_saved_before" jdbcType="BIT" property="logSavedBefore" />
    <result column="log_saved_after" jdbcType="BIT" property="logSavedAfter" />
    <result column="log_filename_before" jdbcType="VARCHAR" property="logFilenameBefore" />
    <result column="log_filename_after" jdbcType="VARCHAR" property="logFilenameAfter" />
    <result column="conn_username" jdbcType="VARCHAR" property="connUsername" />
    <result column="conn_encrypted_password" jdbcType="VARCHAR" property="connEncryptedPassword" />
    <result column="device_type" jdbcType="VARCHAR" property="deviceType" />
    <result column="vendor" jdbcType="VARCHAR" property="vendor" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    work_id, hostname, admin_ip, commit_id, finished, expired, rollback_done, cfg_changed, 
    log_saved_before, log_saved_after, log_filename_before, log_filename_after, conn_username, 
    conn_encrypted_password, device_type, vendor
  </sql>
  <select id="selectByExample" parameterType="com.mobigen.ipbh.db.model.CmBatchWorkDeviceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from public.cm_batch_work_device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.mobigen.ipbh.db.model.CmBatchWorkDeviceKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from public.cm_batch_work_device
    where work_id = #{workId,jdbcType=VARCHAR}
      and hostname = #{hostname,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.mobigen.ipbh.db.model.CmBatchWorkDeviceKey">
    delete from public.cm_batch_work_device
    where work_id = #{workId,jdbcType=VARCHAR}
      and hostname = #{hostname,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.mobigen.ipbh.db.model.CmBatchWorkDeviceExample">
    delete from public.cm_batch_work_device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mobigen.ipbh.db.model.CmBatchWorkDevice">
    insert into public.cm_batch_work_device (work_id, hostname, admin_ip, 
      commit_id, finished, expired, 
      rollback_done, cfg_changed, log_saved_before, 
      log_saved_after, log_filename_before, log_filename_after, 
      conn_username, conn_encrypted_password, device_type, 
      vendor)
    values (#{workId,jdbcType=VARCHAR}, #{hostname,jdbcType=VARCHAR}, #{adminIp,jdbcType=OTHER}, 
      #{commitId,jdbcType=VARCHAR}, #{finished,jdbcType=BIT}, #{expired,jdbcType=BIT}, 
      #{rollbackDone,jdbcType=BIT}, #{cfgChanged,jdbcType=BIT}, #{logSavedBefore,jdbcType=BIT}, 
      #{logSavedAfter,jdbcType=BIT}, #{logFilenameBefore,jdbcType=VARCHAR}, #{logFilenameAfter,jdbcType=VARCHAR}, 
      #{connUsername,jdbcType=VARCHAR}, #{connEncryptedPassword,jdbcType=VARCHAR}, #{deviceType,jdbcType=VARCHAR}, 
      #{vendor,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mobigen.ipbh.db.model.CmBatchWorkDevice">
    insert into public.cm_batch_work_device
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="workId != null">
        work_id,
      </if>
      <if test="hostname != null">
        hostname,
      </if>
      <if test="adminIp != null">
        admin_ip,
      </if>
      <if test="commitId != null">
        commit_id,
      </if>
      <if test="finished != null">
        finished,
      </if>
      <if test="expired != null">
        expired,
      </if>
      <if test="rollbackDone != null">
        rollback_done,
      </if>
      <if test="cfgChanged != null">
        cfg_changed,
      </if>
      <if test="logSavedBefore != null">
        log_saved_before,
      </if>
      <if test="logSavedAfter != null">
        log_saved_after,
      </if>
      <if test="logFilenameBefore != null">
        log_filename_before,
      </if>
      <if test="logFilenameAfter != null">
        log_filename_after,
      </if>
      <if test="connUsername != null">
        conn_username,
      </if>
      <if test="connEncryptedPassword != null">
        conn_encrypted_password,
      </if>
      <if test="deviceType != null">
        device_type,
      </if>
      <if test="vendor != null">
        vendor,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="workId != null">
        #{workId,jdbcType=VARCHAR},
      </if>
      <if test="hostname != null">
        #{hostname,jdbcType=VARCHAR},
      </if>
      <if test="adminIp != null">
        #{adminIp,jdbcType=OTHER},
      </if>
      <if test="commitId != null">
        #{commitId,jdbcType=VARCHAR},
      </if>
      <if test="finished != null">
        #{finished,jdbcType=BIT},
      </if>
      <if test="expired != null">
        #{expired,jdbcType=BIT},
      </if>
      <if test="rollbackDone != null">
        #{rollbackDone,jdbcType=BIT},
      </if>
      <if test="cfgChanged != null">
        #{cfgChanged,jdbcType=BIT},
      </if>
      <if test="logSavedBefore != null">
        #{logSavedBefore,jdbcType=BIT},
      </if>
      <if test="logSavedAfter != null">
        #{logSavedAfter,jdbcType=BIT},
      </if>
      <if test="logFilenameBefore != null">
        #{logFilenameBefore,jdbcType=VARCHAR},
      </if>
      <if test="logFilenameAfter != null">
        #{logFilenameAfter,jdbcType=VARCHAR},
      </if>
      <if test="connUsername != null">
        #{connUsername,jdbcType=VARCHAR},
      </if>
      <if test="connEncryptedPassword != null">
        #{connEncryptedPassword,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null">
        #{deviceType,jdbcType=VARCHAR},
      </if>
      <if test="vendor != null">
        #{vendor,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mobigen.ipbh.db.model.CmBatchWorkDeviceExample" resultType="java.lang.Long">
    select count(*) from public.cm_batch_work_device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update public.cm_batch_work_device
    <set>
      <if test="record.workId != null">
        work_id = #{record.workId,jdbcType=VARCHAR},
      </if>
      <if test="record.hostname != null">
        hostname = #{record.hostname,jdbcType=VARCHAR},
      </if>
      <if test="record.adminIp != null">
        admin_ip = #{record.adminIp,jdbcType=OTHER},
      </if>
      <if test="record.commitId != null">
        commit_id = #{record.commitId,jdbcType=VARCHAR},
      </if>
      <if test="record.finished != null">
        finished = #{record.finished,jdbcType=BIT},
      </if>
      <if test="record.expired != null">
        expired = #{record.expired,jdbcType=BIT},
      </if>
      <if test="record.rollbackDone != null">
        rollback_done = #{record.rollbackDone,jdbcType=BIT},
      </if>
      <if test="record.cfgChanged != null">
        cfg_changed = #{record.cfgChanged,jdbcType=BIT},
      </if>
      <if test="record.logSavedBefore != null">
        log_saved_before = #{record.logSavedBefore,jdbcType=BIT},
      </if>
      <if test="record.logSavedAfter != null">
        log_saved_after = #{record.logSavedAfter,jdbcType=BIT},
      </if>
      <if test="record.logFilenameBefore != null">
        log_filename_before = #{record.logFilenameBefore,jdbcType=VARCHAR},
      </if>
      <if test="record.logFilenameAfter != null">
        log_filename_after = #{record.logFilenameAfter,jdbcType=VARCHAR},
      </if>
      <if test="record.connUsername != null">
        conn_username = #{record.connUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.connEncryptedPassword != null">
        conn_encrypted_password = #{record.connEncryptedPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceType != null">
        device_type = #{record.deviceType,jdbcType=VARCHAR},
      </if>
      <if test="record.vendor != null">
        vendor = #{record.vendor,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update public.cm_batch_work_device
    set work_id = #{record.workId,jdbcType=VARCHAR},
      hostname = #{record.hostname,jdbcType=VARCHAR},
      admin_ip = #{record.adminIp,jdbcType=OTHER},
      commit_id = #{record.commitId,jdbcType=VARCHAR},
      finished = #{record.finished,jdbcType=BIT},
      expired = #{record.expired,jdbcType=BIT},
      rollback_done = #{record.rollbackDone,jdbcType=BIT},
      cfg_changed = #{record.cfgChanged,jdbcType=BIT},
      log_saved_before = #{record.logSavedBefore,jdbcType=BIT},
      log_saved_after = #{record.logSavedAfter,jdbcType=BIT},
      log_filename_before = #{record.logFilenameBefore,jdbcType=VARCHAR},
      log_filename_after = #{record.logFilenameAfter,jdbcType=VARCHAR},
      conn_username = #{record.connUsername,jdbcType=VARCHAR},
      conn_encrypted_password = #{record.connEncryptedPassword,jdbcType=VARCHAR},
      device_type = #{record.deviceType,jdbcType=VARCHAR},
      vendor = #{record.vendor,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mobigen.ipbh.db.model.CmBatchWorkDevice">
    update public.cm_batch_work_device
    <set>
      <if test="adminIp != null">
        admin_ip = #{adminIp,jdbcType=OTHER},
      </if>
      <if test="commitId != null">
        commit_id = #{commitId,jdbcType=VARCHAR},
      </if>
      <if test="finished != null">
        finished = #{finished,jdbcType=BIT},
      </if>
      <if test="expired != null">
        expired = #{expired,jdbcType=BIT},
      </if>
      <if test="rollbackDone != null">
        rollback_done = #{rollbackDone,jdbcType=BIT},
      </if>
      <if test="cfgChanged != null">
        cfg_changed = #{cfgChanged,jdbcType=BIT},
      </if>
      <if test="logSavedBefore != null">
        log_saved_before = #{logSavedBefore,jdbcType=BIT},
      </if>
      <if test="logSavedAfter != null">
        log_saved_after = #{logSavedAfter,jdbcType=BIT},
      </if>
      <if test="logFilenameBefore != null">
        log_filename_before = #{logFilenameBefore,jdbcType=VARCHAR},
      </if>
      <if test="logFilenameAfter != null">
        log_filename_after = #{logFilenameAfter,jdbcType=VARCHAR},
      </if>
      <if test="connUsername != null">
        conn_username = #{connUsername,jdbcType=VARCHAR},
      </if>
      <if test="connEncryptedPassword != null">
        conn_encrypted_password = #{connEncryptedPassword,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null">
        device_type = #{deviceType,jdbcType=VARCHAR},
      </if>
      <if test="vendor != null">
        vendor = #{vendor,jdbcType=VARCHAR},
      </if>
    </set>
    where work_id = #{workId,jdbcType=VARCHAR}
      and hostname = #{hostname,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mobigen.ipbh.db.model.CmBatchWorkDevice">
    update public.cm_batch_work_device
    set admin_ip = #{adminIp,jdbcType=OTHER},
      commit_id = #{commitId,jdbcType=VARCHAR},
      finished = #{finished,jdbcType=BIT},
      expired = #{expired,jdbcType=BIT},
      rollback_done = #{rollbackDone,jdbcType=BIT},
      cfg_changed = #{cfgChanged,jdbcType=BIT},
      log_saved_before = #{logSavedBefore,jdbcType=BIT},
      log_saved_after = #{logSavedAfter,jdbcType=BIT},
      log_filename_before = #{logFilenameBefore,jdbcType=VARCHAR},
      log_filename_after = #{logFilenameAfter,jdbcType=VARCHAR},
      conn_username = #{connUsername,jdbcType=VARCHAR},
      conn_encrypted_password = #{connEncryptedPassword,jdbcType=VARCHAR},
      device_type = #{deviceType,jdbcType=VARCHAR},
      vendor = #{vendor,jdbcType=VARCHAR}
    where work_id = #{workId,jdbcType=VARCHAR}
      and hostname = #{hostname,jdbcType=VARCHAR}
  </update>
</mapper>